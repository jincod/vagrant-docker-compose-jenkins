---
- name: Creates directory
  file: path=/var/jenkins state=directory

- name: Creates backup directory
  file: path=/var/backups/jenkins state=directory

- name: AWS dir exists
  file: path="~/.aws" state=directory

- name: Copy configs 
  copy: src="{{item}}" dest="/var/jenkins/{{item}}"
  with_items:
    - backup.sh
    - docker-compose.yml

- include_vars: vars/vars.yml

- name: AWS create config
  template:
    src: aws_cli_config.j2
    dest: "~/.aws/config"

- name: Install awscli with pip
  pip:
    name=awscli
    state=latest

- shell: "docker network ls | grep proxy-network"
  register: isCreatedNetwork
  ignore_errors: yes

- name: "docker network create"
  command: "docker network create proxy-network"
  when: isCreatedNetwork is defined and isCreatedNetwork.stdout == ""

- name: "docker-compose up"
  command: "docker-compose up -d"
  args:
    chdir: /var/jenkins

- pause: seconds=60

- shell: docker run --rm --volume jenkins_jenkins-data:/jenkins_data jenkins cat /jenkins_data/secrets/initialAdminPassword
  register: initialAdminPassword

- debug:
    msg: "initialAdminPassword {{ initialAdminPassword.stdout }}"
  when: initialAdminPassword is defined and initialAdminPassword.stdout is defined

- name: Schedule backup
  cron:
    name: "backup"
    weekday: 0
    minute: 0
    hour: 0
    job: "/var/jenkins/backup.sh >> /var/log/jenkins-backup.log 2>&1"